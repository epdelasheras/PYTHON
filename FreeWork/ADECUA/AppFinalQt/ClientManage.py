# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ClientManage.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from tinydb import TinyDB, Query, where
from ClientView import *

class Ui_ClientManage(object):
    def __init__(self, db_ADECUA, windowClientManage):
        self.dbClientManage = db_ADECUA # copy database to a local variable. 
        self.wClientManage = windowClientManage #copy window var to a loca var.

    def setup(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(482, 423)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.LineDNI = QtWidgets.QLineEdit(self.centralwidget)
        self.LineDNI.setGeometry(QtCore.QRect(70, 30, 151, 21))
        self.LineDNI.setObjectName("LineDNI")
        self.LinePhone = QtWidgets.QLineEdit(self.centralwidget)
        self.LinePhone.setGeometry(QtCore.QRect(70, 60, 151, 21))
        self.LinePhone.setText("")
        self.LinePhone.setObjectName("LinePhone")
        self.LineEmail = QtWidgets.QLineEdit(self.centralwidget)
        self.LineEmail.setGeometry(QtCore.QRect(70, 90, 151, 21))
        self.LineEmail.setText("")
        self.LineEmail.setObjectName("LineEmail")
        self.ButtonSearchDNI = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonSearchDNI.setGeometry(QtCore.QRect(260, 30, 141, 23))
        self.ButtonSearchDNI.setObjectName("ButtonSearchDNI")
        self.listClient = QtWidgets.QListWidget(self.centralwidget)
        self.listClient.setGeometry(QtCore.QRect(20, 130, 451, 192))
        self.listClient.setObjectName("listClient")
        self.ButtonSelect = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonSelect.setGeometry(QtCore.QRect(20, 340, 101, 23))
        self.ButtonSelect.setObjectName("ButtonSelect")
        self.ButtonView = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonView.setGeometry(QtCore.QRect(140, 340, 101, 23))
        self.ButtonView.setObjectName("ButtonView")
        self.ButtonEdit = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonEdit.setGeometry(QtCore.QRect(260, 340, 101, 23))
        self.ButtonEdit.setObjectName("ButtonEdit")
        self.ButtonSearchPhone = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonSearchPhone.setGeometry(QtCore.QRect(260, 60, 141, 23))
        self.ButtonSearchPhone.setObjectName("ButtonSearchPhone")
        self.ButtonSearchEmail = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonSearchEmail.setGeometry(QtCore.QRect(260, 90, 141, 23))
        self.ButtonSearchEmail.setObjectName("ButtonSearchEmail")
        self.ButtonExit = QtWidgets.QPushButton(self.centralwidget)
        self.ButtonExit.setGeometry(QtCore.QRect(370, 340, 101, 23))
        self.ButtonExit.setObjectName("ButtonExit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.ButtonSearchDNI.setText(_translate("MainWindow", "Buscar por DNI"))
        self.ButtonSelect.setText(_translate("MainWindow", "Seleccionar"))
        self.ButtonView.setText(_translate("MainWindow", "Ver"))
        self.ButtonEdit.setText(_translate("MainWindow", "Modificar"))
        self.ButtonSearchPhone.setText(_translate("MainWindow", "Buscar por Telf."))
        self.ButtonSearchEmail.setText(_translate("MainWindow", "Buscar por Email"))
        self.ButtonExit.setText(_translate("MainWindow", "Salir"))

# mouse click connect functions
        self.ButtonSearchDNI.clicked.connect(self.SearchDNI)
        self.ButtonSearchPhone.clicked.connect(self.SearchPhone)
        self.ButtonSearchEmail.clicked.connect(self.SearchEmail)
        self.ButtonView.clicked.connect(self.Client2View)

# methods related to the action buttons
        
    def Client2View(self):
        self.windowClientView=QtWidgets.QMainWindow()
        self.ui=Ui_ClientView(self.dbClientManage, self.windowClientView)        
        self.ui.setup(self.windowClientView)
        self.windowClientView.show()        

    def SearchDNI(self):
        # get value from the textbox
        dni2search = self.LineDNI.text()
        
        # search for any match in database
        docs = self.dbClientManage.search(where('DNI') == dni2search)
        if not docs:
            print('No docs found, och....')
            exit(0)       

        # create a temp list with the fields to show in the listbox
        lClient = []      
        for doc in docs:
            clientTemp = str(doc.doc_id) + " " + doc['Surname1'] + " " + doc['Surname2'] \
                            + " " + doc['Name'] + " " + doc['DNI'] + " " + doc['Phone']   
            #print(clientTemp)
            lClient.append(clientTemp) 
            
        # add items to the listbox
        self.listClient.clear()
        for i in range(len(lClient)):    
            self.listClient.insertItem(i, lClient[i])

    def SearchPhone(self):    
        # get value from the textbox
        phone2search = self.LinePhone.text()
        
        # search for any match in database
        docs = self.dbClientManage.search(where('Phone') == phone2search)
        if not docs:
            print('No docs found, och....')
            exit(0)       

        # create a temp list with the fields to show in the listbox
        lClient = []      
        for doc in docs:
            clientTemp = str(doc.doc_id) + " " + doc['Surname1'] + " " + doc['Surname2'] \
                            + " " + doc['Name'] + " " + doc['DNI'] + " " + doc['Phone']   
            #print(clientTemp)
            lClient.append(clientTemp) 
            
        # add items to the listbox
        self.listClient.clear()
        for i in range(len(lClient)):    
            self.listClient.insertItem(i, lClient[i])

    def SearchEmail(self):
        # get value from the textbox
        email2search = self.LineEmail.text()
        
        # search for any match in database
        docs = self.dbClientManage.search(where('Email') == email2search)
        if not docs:
            print('No docs found, och....')
            exit(0)       

        # create a temp list with the fields to show in the listbox
        lClient = []      
        for doc in docs:
            clientTemp = str(doc.doc_id) + " " + doc['Surname1'] + " " + doc['Surname2'] \
                            + " " + doc['Name'] + " " + doc['DNI'] + " " + doc['Phone']   
            #print(clientTemp)
            lClient.append(clientTemp) 
            
        # add items to the listbox
        self.listClient.clear()
        for i in range(len(lClient)):    
            self.listClient.insertItem(i, lClient[i])
